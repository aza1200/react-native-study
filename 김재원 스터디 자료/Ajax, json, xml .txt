Ajax:  https://velog.io/@ksung1889/React-Project11.-%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-Ajax-%EC%9A%94%EC%B2%AD%EB%B0%A9%EB%B2%95-Ajax%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80
json:  https://devbirdfeet.tistory.com/113
json vs xml : http://www.tcpschool.com/json/json_intro_xml
json : https://www.daleseo.com/js-json/

Ajax: 서버에 새로고침 없이 요청을 할 수 있게 도와주는 일종의 JS 코드
         비동기식으로 XML을 이용하여 서버와 통신 // 요즘에는 XML보다 JSON 더 많이 사용

작동방식
1. 요청 : 브라우저가 서버에 정보 요청 (브라우저는 XMLHttpRequest라는 객체를 구현)
   -GET: 특정 페이지, 자료읽기 등을 읽고 싶을 때 요청
   -POST: 데이터를 서버로 보내고 싶을 때 ( 아이디를 보내거나 블로그 글을 포스팅 하는 등) 요청
2. 서버의 동작: 서버는 응답으로 데이터 전달 ( XML 또는 JSON)
3. 응답 : 브라우저는 콘텐츠를 처리하여 페이지에 추가


Ajax는 아래것들이 있다.
1. Jquery 설치 후 $.ajax()
2. axios 설치후 axios.get() // view react에서 가장 많이 쓰는 라이브러리
                                     // 비동기처리 쓰려면 axios 따로 import
axios.get(), 괄호안에 URL
3. 쌩자바스크립트 fetch(). //URL 대신에 JSON이라면 object로 자동변환이 안됨
------------------------------------------------------------------------------------------------------------------------------------------------
따옴표가 다 쳐져있는데 서버와 통신할 땐 텍스트만 전송할 수 있다.
텍스트처럼 보이게 하기위해 Object에 따옴표를 다 친것.
전문용어로 JSON이라함.

JSON은 Object자료형처럼 .title, .price 이런식으로 정보를 뽑을수 없어서 JSON자료는 Object로 변환을 해줘야함.
axios라이브러리를 쓰면 JSON자료를 가져와도 지가 알아서 따옴표를 제거한 Object로 자동으로 만들어주는 반면, 
fetch는 그런걸 안해줘서 코드가 약간 더 길어짐.


JavaScript Object Notation(JSON)
인간이 읽을 수 있는 문서, 코딩도 더 적게 필요하고, 처리 속도가 빠른, 경량 언어

문자열 { "name" : "Jones" } // 유니코드 문자, 백슬레시 이스케이프 문자 사용
숫자 {"number_1" : 210.05 } // JS의 배정도수 부동소수점 형식
부울 { "AllowPartialShipment" : false } // 참 또는 거짓 둘 중 하나로 지정, 따옴표로 묶이지 않으며 문자열 취급
NUll { "Special Instructions" : null }
객체 {
       "Influencer" :   { "name" : "Jaxon" ,  "age" : "42" ,  "city" ,  "New York" }
       }// 키값(예시에서 influencer)은 문자열이여야 하며  중괄호 사이에 삽인된 데이터는 콤마로 구분
배열 { {"Influencers" :   [ {
 "name" : "Jaxon", 
 "age" : 42, 
 "Works At" : "Tech News"
}
{
 "name" : "Miller", 
 "age" : 35
 "Works At" : "IT Day"
}] 
}

사용 방법
1. 사용자 생성 데이터로부터 JSON 객체 생성// 임시 데이터 저장에 적합, 여러 언어의 데이터 포맷으로 사용될 수 있음
2. 시스템 간 데이터 전송 // 웹사이트 데이터베이스 간의 유효성 검증을 위해 API 제공, JSON 형식으로 자주 사용
3. 어플리케이션 용 데이터 구성 // 앱 개발 시 각 앱에는 데이터베이스 및 로그 파일 경로 연결에 필요한 인증이 요구되는데 JSON사용
4. 복잡한 데이터 모델 간소화 // 사람이 읽을 수 있는 파일이자 식별 가능하게 간소화 가능


리액트에서 JSON 사용방식
백엔드에서 api 형태로 통신을 거쳐 json 객체 데이터를 불러온다. 이 때 JSON 자료 형식 상 map()함수 사용이 유용하다.
-------------------------------------------------------------------------------------------------------------------------------------
XML(EXtensible Markup Language)
TML과 매우 비슷한 문자 기반의 마크업 언어(text-based markup language)로, 사람과 기계가 동시에 읽기 편한 구조
-HTML처럼 데이터를 보여주는 목적이 아닌, 데이터를 저장하고 전달할 목적. 
-XML 태그는 HTML 태그처럼 미리 정의되어 있지 않고, 사용자가 직접 정의 가능

Json vs xml
공통점
1. 둘 다 데이터를 저장하고 전달하기 위해 고안
2. 둘 다 기계뿐만 아니라 사람도 쉽게 읽기 가능
3. 둘 다 계층적인 데이터 구조
4. 둘 다 다양한 프로그래밍 언어에 의해 파싱되기 가능
5. 둘 다 XMLHttpRequest 객체를 이용하여 서버로부터 데이터를 전송받기 가능

차이점
1. JSON은 종료 태그를 사용 x
2. JSON의 구문이 XML의 구문보다 더 짧다
3. JSON 데이터가 XML 데이터보다 더 빨리 읽고 쓸 수 있다
4. XML은 배열 사용 x, JSON은 배열 사용 o
5. XML은 XML 파서로 파싱, JSON은 자바스크립트 표준 함수인 eval() 함수로 파싱


***XML 문서는 XML DOM(Document Object Model)을 이용하여 해당 문서에 접근합니다.
***하지만 JSON은 문자열을 전송받은 후에 해당 문자열을 바로 파싱하므로, XML보다 더욱 빠른 처리 속도를 보여줍니다.
***하지만 JSON은 전송받은 데이터의 무결성을 사용자가 직접 검증해야 합니다.
***따라서 데이터의 검증이 필요한 곳에서는 스키마를 사용하여 데이터의 무결성을 검증할 수 있는 XML이 아직도 많이 사용되고 있습니다.


react 강의 내에서 json 사용
asyncstorage사용 시 key값은 string value를 받기 때문에 JSON.parse와 JSON.stringify를
사용해서 변환 해주어야 함.

JSON.parse(): JSON 문자열을 JavaScript 객체로 변환
JSON.stringify(): JavaScript 객체를 JSON 문자열로 변환

















