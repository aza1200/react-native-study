1.call back 함수
함수안에 함수가 들어가는 것//
함수에 함수를 매개변수로 전달받아서 실행하는 것.
A함수 이후에 B함수가 실행되기를 바란다면
B를 A함수의 인자로서 콜백함수로 호출하면 원하는 동작 실행 가능.
*그러나 콜백 패턴 중 콜백 헬이라는 반복적인 동기식 처리 방법은 가독성이 나쁘고
에러 처리가 곤란하며 여러개의 비동기 처리를 한 번에 처리하는 것이 어렵다.

2. Promise
1의 *문제를 해결하기 위해 고안됨
전통적인 콜백 패턴이 가진 단점을 보완, 비동기 처리 시점을 명확히 표현.
Promise 생성자 함수를 통해 인스턴스화(객체를 생성).
생성자 함수는 비동기 작업을 수행할 콜백 함수를 인자로 받는다
(이 때 콜백 함수는 resolve와 reject함수를 인자로 받는다// 성공시 resolve에 리턴값을 실패시 reject에 리턴값을 담음)


3.async / await
Promise 기능을 보다 쉽게 사용하기 위함.
async 키워드는 function 앞에 사용한다. function 앞에 async를 붙이면 해당 함수는 항상 프라미스를 반환한다. 
프라미스가 아닌 값을 반환하더라도 이행 상태의 프라미스(resolved promise)로 값을 감싸 이행된 
프라미스가 반환되도록 한다.
함수 앞에 async를, async함수안에 await를 넣어서 promise가 처리될 때까지 대기

























